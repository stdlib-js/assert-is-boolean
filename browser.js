// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,t;e=this,t=function(){"use strict";var e="function"==typeof Object.defineProperty?Object.defineProperty:null,t=function(){try{return e({},"x",{}),!0}catch(e){return!1}},o=Object.defineProperty,r=Object.prototype,n=r.toString,l=r.__defineGetter__,i=r.__defineSetter__,a=r.__lookupGetter__,u=r.__lookupSetter__,c=o,f=function(e,t,o){var c,f,p,y;if("object"!=typeof e||null===e||"[object Array]"===n.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof o||null===o||"[object Array]"===n.call(o))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+o+"`.");if((f="value"in o)&&(a.call(e,t)||u.call(e,t)?(c=e.__proto__,e.__proto__=r,delete e[t],e[t]=o.value,e.__proto__=c):e[t]=o.value),p="get"in o,y="set"in o,f&&(p||y))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&l&&l.call(e,t,o.get),y&&i&&i.call(e,t,o.set),e},p=t()?c:f,y=function(e,t,o){p(e,t,{configurable:!1,enumerable:!1,writable:!1,value:o})};function b(e){return"boolean"==typeof e}var _="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),s=function(){return _&&"symbol"==typeof Symbol.toStringTag},d=Object.prototype.toString,m=d,g=function(e){return m.call(e)},j=Object.prototype.hasOwnProperty,v=function(e,t){return null!=e&&j.call(e,t)},S="function"==typeof Symbol?Symbol.toStringTag:"",h=v,w=S,O=d,P=g,T=function(e){var t,o,r;if(null==e)return O.call(e);o=e[w],t=h(e,w);try{e[w]=void 0}catch(t){return O.call(e)}return r=O.call(e),t?e[w]=o:delete e[w],r},B=s()?T:P,x=Boolean.prototype.toString,E=s();function k(e){return"object"==typeof e&&(e instanceof Boolean||(E?function(e){try{return x.call(e),!0}catch(e){return!1}}(e):"[object Boolean]"===B(e)))}function A(e){return b(e)||k(e)}return y(A,"isPrimitive",b),y(A,"isObject",k),A},"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).isBoolean=t();
//# sourceMappingURL=browser.js.map
